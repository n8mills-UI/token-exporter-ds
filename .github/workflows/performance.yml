name: Performance & Dependency Monitoring

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'package*.json'
      - 'docs/design-system.css'

env:
  NODE_VERSION: '20'
  FORCE_COLOR: 1

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level moderate
        
      - name: Check for outdated dependencies
        run: npm outdated || true
        
      - name: Generate dependency tree
        run: npm ls --depth=0 > dependency-tree.txt
        
      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-report-${{ github.sha }}
          path: dependency-tree.txt
          retention-days: 30

  performance-baseline:
    name: Performance Baseline
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Run comprehensive audit
        run: npm run audit
        
      - name: Measure build performance
        run: |
          echo "=== Build Performance Metrics ===" > performance-report.txt
          echo "Timestamp: $(date)" >> performance-report.txt
          echo "" >> performance-report.txt
          
          # Time the build process
          echo "Build timing:" >> performance-report.txt
          time npm run build 2>&1 | grep real >> performance-report.txt
          echo "" >> performance-report.txt
          
          # File sizes
          echo "Output file sizes:" >> performance-report.txt
          ls -lh src/ui.html docs/design-system-guide.html docs/design-system.css >> performance-report.txt
          echo "" >> performance-report.txt
          
          # CSS complexity metrics
          echo "CSS Complexity:" >> performance-report.txt
          npm run analyze:css >> performance-report.txt 2>&1 || echo "CSS analysis failed" >> performance-report.txt
          
      - name: Store performance baseline
          uses: actions/upload-artifact@v4
          with:
            name: performance-baseline-${{ github.sha }}
            path: |
              performance-report.txt
              reports/
            retention-days: 90

  css-performance:
    name: CSS Performance Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build CSS
        run: npm run build
        
      - name: Analyze CSS complexity
        run: |
          echo "=== CSS Performance Report ===" > css-performance.txt
          echo "Generated: $(date)" >> css-performance.txt
          echo "" >> css-performance.txt
          
          # Wallace complexity analysis
          echo "Complexity Analysis:" >> css-performance.txt
          npm run analyze:css >> css-performance.txt 2>&1 || echo "Wallace analysis failed" >> css-performance.txt
          echo "" >> css-performance.txt
          
          # CSS Stats
          echo "CSS Statistics:" >> css-performance.txt
          npm run stats:css 2>&1 || echo "CSS stats failed" >> css-performance.txt
          
          # File size breakdown
          echo "" >> css-performance.txt
          echo "File Sizes:" >> css-performance.txt
          wc -c docs/design-system.css >> css-performance.txt
          gzip -c docs/design-system.css | wc -c | xargs echo "Gzipped size:" >> css-performance.txt
          
      - name: Upload CSS performance report
        uses: actions/upload-artifact@v4
        with:
          name: css-performance-${{ github.sha }}
          path: |
            css-performance.txt
            reports/css-stats.json
            reports/specificity.html
          retention-days: 30

  accessibility-monitoring:
    name: Accessibility Monitoring
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build documentation
        run: npm run build
        
      - name: Run accessibility tests
        run: |
          echo "=== Accessibility Report ===" > a11y-report.txt
          echo "Timestamp: $(date)" >> a11y-report.txt
          echo "" >> a11y-report.txt
          
          npm run lint:a11y >> a11y-report.txt 2>&1 || echo "Accessibility tests failed" >> a11y-report.txt
          
      - name: Upload accessibility report
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report-${{ github.sha }}
          path: a11y-report.txt
          retention-days: 30

  notify-performance-issues:
    name: Performance Issue Notification
    runs-on: ubuntu-latest
    needs: [dependency-audit, performance-baseline, css-performance, accessibility-monitoring]
    if: failure()
    
    steps:
      - name: Notify of performance degradation
        run: |
          echo "::warning::Performance monitoring detected issues"
          echo "Check the failed job logs for details"
          echo "This may indicate:"
          echo "- Dependency vulnerabilities"
          echo "- CSS complexity increase"
          echo "- Build performance regression"
          echo "- Accessibility violations"