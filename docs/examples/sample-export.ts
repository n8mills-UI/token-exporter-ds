// Design Tokens - TypeScript
// Generated by Token Exporter
// https://github.com/n8mills-UI/token-exporter-showcase

// Type definitions for design tokens
export interface DesignTokens {
  color: {
    brand: {
      primary: string;
      secondary: string;
    };
    neutral: {
      900: string;
    };
  };
  font: {
    size: {
      base: string;
      lg: string;
    };
    weight: {
      regular: number;
      bold: number;
    };
  };
  spacing: {
    sm: string;
    md: string;
    lg: string;
  };
  radius: {
    md: string;
  };
}

// Design token values with const assertions for type safety
export const tokens = {
  color: {
    brand: {
      primary: '#D2FF37',
      secondary: '#FF37D2',
    },
    neutral: {
      900: '#171717',
    },
  },
  font: {
    size: {
      base: '16px',
      lg: '20px',
    },
    weight: {
      regular: 400,
      bold: 700,
    },
  },
  spacing: {
    sm: '8px',
    md: '16px',
    lg: '24px',
  },
  radius: {
    md: '6px',
  },
} as const;

// Type-safe token getter with autocomplete
export function getToken<K extends keyof DesignTokens>(
  category: K
): DesignTokens[K] {
  return tokens[category];
}

// Utility type for extracting token values
export type TokenValue<T> = T extends { [key: string]: infer U } ? U : T;

// Export individual token categories for convenience
export const colors = tokens.color;
export const typography = tokens.font;
export const spacing = tokens.spacing;
export const borderRadius = tokens.radius;