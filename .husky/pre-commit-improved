#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Run lint-staged for incremental checks
npx lint-staged

# Only check staged files to avoid false positives
STAGED_FILES=$(git diff --cached --name-only)

if [ -n "$STAGED_FILES" ]; then
    # Whitelist for legitimate files that might match patterns
    WHITELIST="package.json|package-lock.json|tsconfig.json|jest.config.json|eslint.config.json|.stylelintrc.json|manifest.json|config.json|README.md|LICENSE.md|CHANGELOG.md|CONTRIBUTING.md"
    
    # More precise patterns - match whole words and specific prefixes/suffixes
    UNORGANIZED=$(printf '%s\n' "$STAGED_FILES" | \
        grep -v node_modules | \
        grep -v -E "^($WHITELIST)$" | \
        grep -iE '^[^/]*[-_]?(analysis|diagnostic|report|audit|research|mockup|demo|temp|tmp|test-data|test-results)[-_]?.*\.(md|html|json)$|^(analysis|diagnostic|report|audit|research|mockup|demo|temp|tmp|test-data|test-results).*\.(md|html|json)$' || true)
    
    if [ -n "$UNORGANIZED" ]; then
        printf "\nüîç Found potentially unorganized files in root directory:\n"
        printf '%s\n' "$UNORGANIZED" | while IFS= read -r file; do
            safe_file=$(printf '%s' "$file" | sed 's/[`$\\]/\\&/g')
            case "$file" in
                *.md) printf "  üìÑ %s ‚Üí consider moving to .dev/analysis/ or docs/\n" "$safe_file" ;;
                *.html) printf "  üåê %s ‚Üí consider moving to .dev/temp/\n" "$safe_file" ;;
                *.json) printf "  ‚öôÔ∏è  %s ‚Üí verify if this config belongs in root\n" "$safe_file" ;;
            esac
        done
        
        printf "\n‚ùì Options:\n"
        printf "  1. Continue commit: git commit --no-verify\n"
        printf "  2. Move files: git reset HEAD <file> && mv <file> .dev/<folder>/\n"
        printf "  3. Add to whitelist if legitimate (edit .husky/pre-commit)\n"
        
        # Ask for confirmation instead of blocking
        printf "\n‚ùó Continue with commit anyway? [y/N]: "
        read -r response
        case "$response" in
            [yY]|[yY][eE][sS])
                printf "‚úÖ Continuing with commit...\n"
                ;;
            *)
                printf "‚ùå Commit cancelled. Use --no-verify to skip this check.\n"
                exit 1
                ;;
        esac
    fi
fi

printf "‚úÖ File organization check complete!\n"